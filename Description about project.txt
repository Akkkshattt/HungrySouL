A food ordering web app is a platform that allows customers to order food from local restaurants and grocery stores online. The app provides a seamless and intuitive user experience, enabling customers to browse menus, place orders, and track the status of their deliveries in real-time.

The app typically consists of three main panels:

User Panel: This panel allows customers to:
Register and log in to their accounts
Browse restaurants and menus
Place orders and select payment options
Track the status of their orders
Leave reviews and ratings for restaurants and food
Restaurant Panel: This panel allows restaurants to:
Create and manage their profiles
Upload and update menus
Accept and reject orders
Manage payment options and gateways
Delivery Staff Panel: This panel allows delivery staff to:
Sign in and log in to their accounts
View order requests from nearby restaurants
Track the status of deliveries
Contact customers through call or online chat
Manage payments and transaction history
The app also includes features such as:

Backend - nodejs, express, jsonwebtoken-for authentication,mongoose-for database,bcrypt-for storing user data in encrypted form,
          cors:for setting relation between backend and frontend,dotenv:for storing env variables,body-parser:parse data coming from user,multer:store images system,stripe:paymnent gateway,
          validator:to check if email id and pass are valid or not,nodemon
for testing Api i used thunderclient inbuilt extension


Database:mongodb atlas

admin :axios - create network request like get/post/edit etc
       react-toastify- to create notification easily

FLAWS :
1 Unable to add dynamic food item in the cart //solved
2 Image is displaying in circular form for both admin and frontend after fetching from API  //solved

Future Goals:
Pagination in explore menu part

Middleware:
before adding any item to cart first we authenticated user using jwt token 